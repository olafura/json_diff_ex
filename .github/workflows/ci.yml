name: CI
on: [pull_request]

jobs:
  test-legacy:
    runs-on: ubuntu-latest
    env:
      CONTAINER: ubuntu:18.04
    strategy:
      matrix:
        elixir: ["1.5", "1.6", "1.7", "1.8", "1.9", "1.10", "1.11"]
        otp: ["20", "21", "22", "23"]
        exclude:
          - elixir: "1.5"
            otp: "21"
          - elixir: "1.5"
            otp: "22"
          - elixir: "1.5"
            otp: "23"
          - elixir: "1.6"
            otp: "21"
          - elixir: "1.6"
            otp: "22"
          - elixir: "1.6"
            otp: "23"
          - elixir: "1.7"
            otp: "23"
          - elixir: "1.8"
            otp: "23"
          - elixir: "1.9"
            otp: "23"
          - elixir: "1.10"
            otp: "20"
          - elixir: "1.11"
            otp: "20"
    steps:
      - uses: actions/checkout@v4
      - name: Start Docker Container
        run: |
          docker pull $CONTAINER
          docker run --name build-container -d -v ${{ github.workspace }}:/workspace $CONTAINER tail -f /dev/null

      - name: Install Dependencies
        env:
          SCRIPT: |
            sed -i '/deb-src/s/^# *//' /etc/apt/sources.list
            apt-get update
            apt-get install -y build-essential wget curl git autoconf m4 libncurses5-dev libssh-dev xsltproc fop
            apt-get build-dep -y erlang
            wget https://github.com/openssl/openssl/releases/download/OpenSSL_1_0_2u/openssl-1.0.2u.tar.gz
            tar xf openssl-1.0.2u.tar.gz
            cd openssl-1.0.2u/ && ./config --prefix=/usr/local/openssl-1.0.2u -fpic && make && make install
            curl https://mise.run | sh
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Setup Erlang/OTP and Elixir
        env:
          SCRIPT: |
            eval "$(~/.local/bin/mise activate bash)"
            export LANG=en_US.UTF-8
            MISE_VERBOSE=1 KERL_DEBUG=t ERLANG_OPENSSL_PATH="/usr/local/openssl-1.0.2u" KERL_CONFIGURE_OPTIONS="--with-ssl=/usr/local/openssl-1.0.2u" mise use erlang@${{ matrix.otp }} || cat ~/.cache/mise/erlang/kerl/builds/*/otp_build*.log
            mise use elixir@${{ matrix.elixir }}
        run: docker exec build-container bash -c "$SCRIPT"
      - name: Test
        env:
          SCRIPT: |
            cd /workspace
            eval "$(~/.local/bin/mise activate bash)"
            export LANG=en_US.UTF-8
            mix local.hex --force
            mix deps.get
            mix test
        run: docker exec build-container bash -c "$SCRIPT"
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.12", "1.13", "1.14", "1.15", "1.16", "1.17", "1.18"]
        otp: ["24", "25", "26", "27"]
        exclude:
          - elixir: "1.12"
            otp: "25"
          - elixir: "1.12"
            otp: "26"
          - elixir: "1.12"
            otp: "27"
          - elixir: "1.13"
            otp: "25"
          - elixir: "1.13"
            otp: "26"
          - elixir: "1.13"
            otp: "27"
          - elixir: "1.14"
            otp: "26"
          - elixir: "1.14"
            otp: "27"
          - elixir: "1.15"
            otp: "27"
          - elixir: "1.16"
            otp: "27"
          - elixir: "1.17"
            otp: "24"
          - elixir: "1.18"
            otp: "24"
    steps:
      - uses: actions/checkout@v3
      - name: Setup Erlang/OTP and Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}
      - name: Install npm dependencies
        run: npm install
      - name: Install Elixir dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test
